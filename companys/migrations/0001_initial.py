# Generated by Django 5.1.7 on 2025-03-23 13:39

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, validators=[django.core.validators.EmailValidator(message='Enter a valid email address')])),
                ('name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='invalid_name', message='Name must contain only letters and at least 3 characters', regex='^[a-zA-Z ]{3,}$')])),
                ('est', models.DateField(blank=True, null=True)),
                ('img', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=11, null=True, validators=[django.core.validators.RegexValidator(code='invalid_phone_number', message='Phone number must be a valid Egyptian number (e.g., 01012345678)', regex='^(01[0-2,5]{1}[0-9]{8})$')])),
                ('industry', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_company', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(related_name='company_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='company_permissions', to='auth.permission')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
